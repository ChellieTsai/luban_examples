
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace cfg.test
{
public sealed partial class TestIndex : Luban.BeanBase
{
    public TestIndex(ByteBuf _buf) 
    {
        ID = _buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);ELES = new System.Collections.Generic.List<test.DemoType1>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { test.DemoType1 _e0;  _e0 = test.DemoType1.DeserializeDemoType1(_buf); ELES.Add(_e0);}}
        foreach(var _v in ELES)
        { 
            ELES_Index.Add(_v.X1, _v);
        }
    }

    public static TestIndex DeserializeTestIndex(ByteBuf _buf)
    {
        return new test.TestIndex(_buf);
    }

    public readonly int ID;
    public readonly System.Collections.Generic.List<test.DemoType1> ELES;
    public readonly System.Collections.Generic.Dictionary<int, test.DemoType1> ELES_Index = new System.Collections.Generic.Dictionary<int, test.DemoType1>();
   
    public const int __ID__ = 1941154020;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        foreach (var _e in ELES) { _e?.ResolveRef(tables); }
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + ID + ","
        + "eles:" + Luban.StringUtil.CollectionToString(ELES) + ","
        + "}";
    }
}

}

