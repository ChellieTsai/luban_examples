
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace cfg.ai
{
public sealed partial class SimpleParallel : ai.ComposeNode
{
    public SimpleParallel(ByteBuf _buf)  : base(_buf) 
    {
        FINISH_MODE = (ai.EFinishMode)_buf.ReadInt();
        MAIN_TASK = ai.Task.DeserializeTask(_buf);
        BACKGROUND_NODE = ai.FlowNode.DeserializeFlowNode(_buf);
    }

    public static SimpleParallel DeserializeSimpleParallel(ByteBuf _buf)
    {
        return new ai.SimpleParallel(_buf);
    }

    public readonly ai.EFinishMode FINISH_MODE;
    public readonly ai.Task MAIN_TASK;
    public readonly ai.FlowNode BACKGROUND_NODE;
   
    public const int __ID__ = -1952582529;
    public override int GetTypeId() => __ID__;

    public override void ResolveRef(Tables tables)
    {
        base.ResolveRef(tables);
        MAIN_TASK?.ResolveRef(tables);
        BACKGROUND_NODE?.ResolveRef(tables);
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + ID + ","
        + "node_name:" + NODE_NAME + ","
        + "decorators:" + Luban.StringUtil.CollectionToString(DECORATORS) + ","
        + "services:" + Luban.StringUtil.CollectionToString(SERVICES) + ","
        + "finish_mode:" + FINISH_MODE + ","
        + "main_task:" + MAIN_TASK + ","
        + "background_node:" + BACKGROUND_NODE + ","
        + "}";
    }
}

}

