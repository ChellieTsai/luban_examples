
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace cfg.ai
{
public sealed partial class Selector : ai.ComposeNode
{
    public Selector(ByteBuf _buf)  : base(_buf) 
    {
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);CHILDREN = new System.Collections.Generic.List<ai.FlowNode>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { ai.FlowNode _e0;  _e0 = ai.FlowNode.DeserializeFlowNode(_buf); CHILDREN.Add(_e0);}}
    }

    public static Selector DeserializeSelector(ByteBuf _buf)
    {
        return new ai.Selector(_buf);
    }

    public readonly System.Collections.Generic.List<ai.FlowNode> CHILDREN;
   
    public const int __ID__ = -1946981627;
    public override int GetTypeId() => __ID__;

    public override void ResolveRef(Tables tables)
    {
        base.ResolveRef(tables);
        foreach (var _e in CHILDREN) { _e?.ResolveRef(tables); }
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + ID + ","
        + "node_name:" + NODE_NAME + ","
        + "decorators:" + Luban.StringUtil.CollectionToString(DECORATORS) + ","
        + "services:" + Luban.StringUtil.CollectionToString(SERVICES) + ","
        + "children:" + Luban.StringUtil.CollectionToString(CHILDREN) + ","
        + "}";
    }
}

}

