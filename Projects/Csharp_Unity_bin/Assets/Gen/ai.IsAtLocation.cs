
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace cfg.ai
{
public sealed partial class IsAtLocation : ai.Decorator
{
    public IsAtLocation(ByteBuf _buf)  : base(_buf) 
    {
        ACCEPTABLE_RADIUS = _buf.ReadFloat();
        KEYBOARD_KEY = _buf.ReadString();
        INVERSE_CONDITION = _buf.ReadBool();
    }

    public static IsAtLocation DeserializeIsAtLocation(ByteBuf _buf)
    {
        return new ai.IsAtLocation(_buf);
    }

    public readonly float ACCEPTABLE_RADIUS;
    public readonly string KEYBOARD_KEY;
    public readonly bool INVERSE_CONDITION;
   
    public const int __ID__ = 1255972344;
    public override int GetTypeId() => __ID__;

    public override void ResolveRef(Tables tables)
    {
        base.ResolveRef(tables);
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + ID + ","
        + "node_name:" + NODE_NAME + ","
        + "flow_abort_mode:" + FLOW_ABORT_MODE + ","
        + "acceptable_radius:" + ACCEPTABLE_RADIUS + ","
        + "keyboard_key:" + KEYBOARD_KEY + ","
        + "inverse_condition:" + INVERSE_CONDITION + ","
        + "}";
    }
}

}

