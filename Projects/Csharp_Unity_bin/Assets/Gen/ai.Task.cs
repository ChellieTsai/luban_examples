
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace cfg.ai
{
public abstract partial class Task : ai.FlowNode
{
    public Task(ByteBuf _buf)  : base(_buf) 
    {
        IGNORE_RESTART_SELF = _buf.ReadBool();
    }

    public static Task DeserializeTask(ByteBuf _buf)
    {
        switch (_buf.ReadInt())
        {
            case ai.UeWait.__ID__: return new ai.UeWait(_buf);
            case ai.UeWaitBlackboardTime.__ID__: return new ai.UeWaitBlackboardTime(_buf);
            case ai.MoveToTarget.__ID__: return new ai.MoveToTarget(_buf);
            case ai.ChooseSkill.__ID__: return new ai.ChooseSkill(_buf);
            case ai.MoveToRandomLocation.__ID__: return new ai.MoveToRandomLocation(_buf);
            case ai.MoveToLocation.__ID__: return new ai.MoveToLocation(_buf);
            case ai.DebugPrint.__ID__: return new ai.DebugPrint(_buf);
            default: throw new SerializationException();
        }
    }

    public readonly bool IGNORE_RESTART_SELF;
   

    public override void ResolveRef(Tables tables)
    {
        base.ResolveRef(tables);
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + ID + ","
        + "node_name:" + NODE_NAME + ","
        + "decorators:" + Luban.StringUtil.CollectionToString(DECORATORS) + ","
        + "services:" + Luban.StringUtil.CollectionToString(SERVICES) + ","
        + "ignore_restart_self:" + IGNORE_RESTART_SELF + ","
        + "}";
    }
}

}

